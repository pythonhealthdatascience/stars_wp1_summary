---
title: "Reflections from reproductions"
bibliography: ../references.bib
---

This page describes the facilitators for each reproduction (and, conversely, the barriers to the reproduction, in their absence). With each section, I have created a table which evaluates whether the facilitators were fully met (‚úÖ), partially met (üü°), not met (‚ùå) or not applicable (N/A) for each study.

<!--TODO: Add Johnson et al. 2021 reflections once have finished reproduction -->

Links to each study:

* @shoaib_simulation_2021 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-shoaib-2022/evaluation/reflections.html" target="_blank">link to reflections</a>
* @huang_optimizing_2019  - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-huang-2019/evaluation/reflections.html" target="_blank">link to reflections</a>
* @lim_staff_2020 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-lim-2020/evaluation/reflections.html" target="_blank">link to reflections</a>
* @kim_modelling_2021 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-kim-2021/evaluation/reflections.html" target="_blank">link to reflections</a>
* @anagnostou_facs-charm_2022 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-anagnostou-2022/evaluation/reflections.html" target="_blank">link to reflections</a>
* @johnson_cost_2021 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-johnson-2021/evaluation/reflections.html" target="_blank">link to reflections</a>

## Environment

::: {.callout-note icon=false collapse=true}

## List required packages

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | üü° | ‚úÖ | ‚úÖ | <!--TODO--> |

@shoaib_simulation_2021: Not met. This became a time-consuming issue as it took a while to identify a dependency that was needed for the code to work (`greenlet`) (based on reading the documentation for `salabim`), and a while longer to realise I had installed another package when the package I needed was in base (`statistics`).

@huang_optimizing_2019: Not met. However, this was fairly easily resolved based on imports to `.R` script, and then on extra imports suggested by RStudio when I tried and failed to run the script.

@lim_staff_2020: Partially met. The only packages needed (`numpy` and `pandas`) are mentioned in the paper (although only listed as imports in the script).

@kim_modelling_2021: Fully met. Provides commands to install packages required at the start of scripts, which I could then easily base renv on automatically (as it detects them).

@anagnostou_facs-charm_2022: Fully met. Provides `requirements.txt`

@johnson_cost_2021: <!--TODO-->

**Reflections:**

* The `import` statements can be sufficient in indicating all the packages required but this is not always the case if there are "hidden"/unmentioned dependencies that don't get imported
* There are various options for listing the packages (e.g. comprehensive import statements, installation lines in the script, environment files).
* This was a common issue.

:::

::: {.callout-note icon=false collapse=true}

## Provide versions

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | üü° | üü° | üü° | <!--TODO--> |

@shoaib_simulation_2021: Not met. I had to backdate the package versions as the model didn't work with the latest.

@huang_optimizing_2019: Not met. I initially tried to create an environment with R and package versions that were prior to the article publication date. However, I had great difficulties implementing this with R, and never managed to successfully do this. This was related to:

* The difficulty of switching between R versions
* Problems in finding available/a source for specific package versions for specific versions or R

@lim_staff_2020: Partially met. Provides major Python version, but chose minor and the package versions based on article publication date.

@kim_modelling_2021: Partially met. States version of R but not package. Due to prior issues with backdating R, used latest versions. There were no issues using the latest versions of R and packages, but if there had been, it would be important to know what versions had previously been used and worked.

@anagnostou_facs-charm_2022: Partially met (depending on how strict you are being). The Python version was stated in the paper, and the simpy version was stated in the complementary app repository (although neither were mentioned in the model repository itself).

@johnson_cost_2021: <!--TODO-->

**Reflections:**

* Models will sometimes work with the latest versions of packages, but likewise, you will sometimes need to backdate as it no longer works with the latest
* For Python, it was very easy to "backdate" the python and package versions. However, I found this very difficult to in R, and ended up always using the latest versions.
* Versions are sometimes provided elsewhere (e.g. in paper, in other repositories), but would be handy to be in model repository itself
* This was a very common issue.

:::

## Structure of code and scripts

::: {.callout-warning icon=false collapse=true}

## Model is provided in a "runnable" format

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚úÖ | ‚ùå | ‚úÖ | ‚úÖ | ‚úÖ | <!--TODO--> |

@shoaib_simulation_2021: Fully met. Provided as a single `.py` file which ran model with function `main()`.

@huang_optimizing_2019: Not met. The model code was provided within the code for a web application, but the paper was not focused on this application, and instead on specific model scenarios. I had to extract the model code and transform it into a format that was "runnable" as an R script/notebook.

@lim_staff_2020: Fully met. Provided as a single `.py` file which ran the model with a for loop.

@kim_modelling_2021: Fully met. Has seperate `.R` scripts for each scenario which ran the model by calling functions from elsewhere in repository.

@anagnostou_facs-charm_2022: Fully met. Can run model from command line.

@johnson_cost_2021: <!--TODO-->

**Reflections:**

* If you are presenting the results of a model, then provide the code for that model in a "runnable" format.
* This was an uncommon issue.

:::

::: {.callout-warning icon=false collapse=true}

## Model is designed to be run programmatically

In other words, there is some provision for re-running the model with different parameters without changing the code for the model itself.

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ | <!--TODO--> |

@shoaib_simulation_2021: Not met. The model is set up as classes and run using a function. However, it is not designed to allow any variation in inputs. Everything uses default inputs, and it designed in such a way that - if you wish to vary model parameters - you need to directly change these in the script itself. This meant you couldn't run multiple versions of the model using the same script. It also meant hidden errors were more likely (e.g. if miss changing a parameter somewhere, or input the wrong parameters and don‚Äôt realise).

@huang_optimizing_2019: Fully met. Model was set up as a function, with many of the required parameters already set as "changeable" inputs to that function.

@lim_staff_2020: Fully met. The model is created from a series of functions and run with a for loop that iterates through different parameters. As such, the model is able to be run programmatically (within that for loop, which varied e.g. staff per shift and so on and re-ran the model).

@kim_modelling_2021: Fully met. Each scenario is an R script which states different parameters and then calls functions to run model.

@anagnostou_facs-charm_2022: Fully met. Change inputs in input `.csv` files.

@johnson_cost_2021: <!--TODO-->

**Reflections:**

* Design model so that you can re-run it with different parameters without needing to make changes to the model code itself.
    * This allows you to run multiple versions of the model with the same script.
    * It also reduces the likelihood of missing errors (e.g. if miss changing an input parameter somewhere, or input the wrong parameters and don't realise).
* This was an uncommon issue.

:::

::: {.callout-warning icon=false collapse=true}

## Don't hard code parameters that you will want to change for scenario analyses

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | üü° | ‚ùå | ‚úÖ | N/A | <!--TODO--> |

@shoaib_simulation_2021: Not met. Although some parameters sat "outside" of the model within the `main()` function (and hence were more "changeable", even if not "changeable" inputs to that function, but changed directly in script). However, many of the other parameters were hard-coded within the model itself. It took time to spot where these were and correctly adjust them to be modifiable inputs.

@huang_optimizing_2019: Partially met. Pretty much all of the parameters that we wanted to change were not hard coded and were instead inputs to the model function `simulate_nav()`. However, I did need to add an `exclusive_use` scenario which conditionally changed `ir_resources`, but that is the only exception. I also add `ed_triage` as a changeable input but didn't end up needing that to reproduce any results (was just part of troubleshooting). I also

@lim_staff_2020: Not met. Some parameters were not hard coded within the model, but lots of them were not.

@kim_modelling_2021: Fully met. All model parameters could be varied from "outside" the model code itself, as they were provided as changeable inputs to the model.

@anagnostou_facs-charm_2022: N/A as no scenarios.

@johnson_cost_2021: <!--TODO-->

**Reflections:**

* It can be quite difficult to change parameters that are hard coded into the model. Ideally, all the parameters that a user might want to change should be easily changeable and not hard coded.
* This is a somewhat common issue.
* There is overlap between this and whether the code for scenarios is provided (as typically, the code for scenario is conditionally changing parameter values, although this can be facilitated by not hard coding the parameters, so you call need to change the values from "outside" the model code, rather than making changes to the model functions themselves). Hence, have included as two seperate reflections.

:::

::: {.callout-warning icon=false collapse=true}

## Avoid large amounts of code duplication

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå |

@shoaib_simulation_2021: The model often contained very similar code before or after warm-up. This has the potential to introduce mistakes - with a suspected (although unconfirmed) mistake being that the lower boundary for the doctor consultation times in configuration 1 differed before and after warm-up.

:::

::: {.callout-warning icon=false collapse=true}

## Include sufficient comments in the code

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| <!--TODO--> | ‚ùå | ‚úÖ |

@huang_optimizing_2019: Would have benefitted from more comments, as it took some time to decipher and ensure I have correctly understood code as it uses lots of abbreviations.

@lim_staff_2020: Lots of comments in the code (including doc-string-style comments at the start of functions) that aided understanding of how it worked.

:::

## Run time and memory usage

::: {.callout-important icon=false collapse=true}

## Quicker models are easier to work with

I have not evaluated like as a criteria, as a long run time is not inherently a bad thing. However, I definitely found that the run time of models had a big impact on how easy it was to reproduce results as longer run times meant it was tricky (or even impossible) to run in the first place, or tricky to re-run.

The studies where I made adjustments were:

* @shoaib_simulation_2021: Add parallel processing and ran fewer replications
* <!-- TODO: Check run time of Huang -->
* @lim_staff_2020: Add parallel processing
* @kim_modelling_2021: Reduced number of people in simulation, and switched from serial to the provided parallel option.
* @anagnostou_facs-charm_2022: Model was super quick which made it really easy to run and re-run each time

For @kim_modelling_2021, an error appears to have been introduced with the aoorta diameter thresholds by switching between nested and unnested lists, which I‚Äôm anticipating was unresolved due to the long run times of the model meaning they weren‚Äôt all run in sequence at the end.

:::

::: {.callout-important icon=false collapse=true}

## For slow models, it's very important to state the expected run time

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| <!----> | <!----> | ‚ùå | ‚ùå | N/A |

For long models with no statement, it can take a while to realise that it's not an error in the code or anything, but actually just a long run time! And hard to know how long to expect, and whether it is without the capacities of your machine and so on.

@anagnostou_facs-charm_2022: Very quick! Seconds!

:::

::: {.callout-important icon=false collapse=true}

## For computationally expensive models, state memory usage, and potentially include alternatives for running it on machines without the capacity for it

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| <!----> | <!----> | <!----> | <!--TODO--> | N/A |

<!--TODO: Figure where to put this... Kim et al. 2021: reproduction facilitated by provision of option to run model with parallel processing. However, would've been beneficial to provide suggestions for how to run model quicker on lower spec machine (e.g. lowering number of people) -->

:::

## Parameters, scenarios and outputs

::: {.callout-tip icon=false collapse=true}

## Provide code for all scenarios

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚ùå | <!--TODO--> | N/A |

@shoaib_simulation_2021: There were several instances where it took quite a while to understand how and where to modify the code in order to run scenarios (e.g. no arrivals, transferring admin work, reducing doctor intervention in deliveries).

@huang_optimizing_2019: Set up a notebook to programmatically run the model scenarios. It took alot of work to modify and write code that could run the scenarios, and I often made mistakes in my interpretation for the implementation of scenarios, which could be avoided if code for those scenarios was provided.

@lim_staff_2020: Several parameters or scenarios were not incorporated in the code, and had to be added (e.g. with conditional logic to skip or change code run, removing hard-coding, adding parameters to existing).

:::

::: {.callout-tip icon=false collapse=true}

## All the required outputs are calculated/provided

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | <!--TODO--> | ‚ùå | ‚ùå | ‚úÖ |

@shoaib_simulation_2021: Had to add some outputs and calculations (e.g. proportion of childbirth cases referred, standard deviation)

@lim_staff_2020: The model script provided was only set up to provide results from days 7, 14 and 21. The figures require daily results, so I needed to modify the code to output that. 

@kim_modelling_2021: Had to write code to find aorta sizes of people with AAA-related deaths.

:::

::: {.callout-tip icon=false collapse=true}

## Include correct parameters in the script (even if just for one scenario)

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| <!--TODO--> | ‚ùå | <!--TODO--> | <!--TODO--> | ‚úÖ |

@huang_optimizing_2019: The baseline model in the script did not match the baseline model in the paper, so had to modify parameters.

:::

::: {.callout-tip icon=false collapse=true}

## Provide all the required parameters

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚ùå | <!--TODO--> | ‚úÖ |

@shoaib_simulation_2021: Some parameters that could not be calculated were not provided - ie. what consultation boundaries to use when mean length of doctor consultation was 2.5 minutes

@huang_optimizing_2019: In this case, patient arrivals and resource numbers were listed in the paper, and there were several discprepancies between this and the provided code. However, for many of the model parameters like length of appointment, these were not mentioned in the paper, and so it was not possible to confirm whether or not those were correct.

@lim_staff_2020: For Figure 5, had to guess the value for `staff_per_shift`.

:::

::: {.callout-tip icon=false collapse=true}

## If not provided in the script, then *clearly* present all parameters in the paper

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | <!--TODO--> | ‚úÖ | <!--TODO--> | N/A |


@shoaib_simulation_2021: Although there was a scenario table, this did not include all the parameters I would need to change. It was more challenging to identify parameters that were only described in the body of the article. There were also some discrepancies in parameters between the main text of the article, and the tables and figures. Some scenarios were quite ambiguous/unclear from their description in the text, and I initially misunderstood the required parameters for the scenarios.

:::

::: {.callout-tip icon=false collapse=true}

## If will need to process parameters, provide required calculations

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚úÖ | <!--TODO--> | <!--TODO--> | N/A |

@shoaib_simulation_2021: It was unclear how to estimate inter-arrival time

@huang_optimizing_2019: The calculations for inter-arrival times were provided in the code, and the inputs to the code were the number of arrivals, as reported in the paper, and so making it easy to compare those parameters and check if numbers were correct or not.

:::

## Output format

::: {.callout-caution icon=false collapse=true}

## Saves output to a file

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚úÖ | <!--TODO--> | ‚ùå | <!--TODO--> | ‚úÖ |

@anagnostou_facs-charm_2022: Outputs to `OUT_STATS.csv`.

:::

::: {.callout-caution icon=false collapse=true}

## Understandable output tables

E.g. Easy to figure out how to use output table/s to create tables/figures.

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | <!--TODO--> | <!--TODO--> | <!--TODO--> | ‚úÖ |

For @shoaib_simulation_2021, there were two alternative results spreadsheets with some duplicate metrics but sometimes differing results between them, which made it a bit confusing to work out what to use.

@anagnostou_facs-charm_2022: The layout of the results spreadsheet was simple, understandable and easy to read, making it easy to adapt into figures.

:::

## Seeds

::: {.callout-note icon=false collapse=true}

## Use seeds to control stochasticity

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚ùå | ‚úÖ | ‚úÖ |

@shoaib_simulation_2021: The lack of seeds wasn't actually a barrier to the reproduction though due to the replication number. I later add seeds so my results could be reproduced, and found that the ease of setting seeds with salabim was a greater facilitator to the work. I only had to change one or two lines of code to then get consistent results between runs (unlike other simulation software like SimPy where you have to consider the use of seeds by different sampling functions). Moreover, by default, salabim would have set a seed (although overridden by original authors to enable them to run replications).

@huang_optimizing_2019: It would have been beneficial to include seeds, as there was a fair amount of variability, so with seeds I could then I could be sure that my results do not differ from the original simply due to randomness.

@lim_staff_2020: The results obtained looked very similar to the original article, with minimal differences that I felt to be within the expected variation from the model stochasticity. However, if seeds had been present, we would have been able to say with certainty. I did not feel I needed to add seeds during the reproduction to get the same results.

@anagnostou_facs-charm_2022: The authors included a random seed so the results I got were identical to the original (so no need for any subjectivity in deciding whether its similar enough, as I could perfectly reproduce).

:::

## Code to produce article results

::: {.callout-warning icon=false collapse=true}

## Provide code to process results into tables

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | N/A | <!--TODO--> | ‚ùå |

<!--TODO: Lim 2020... I think from memory that this output tables  similar to the paper, but I then changed them as that format was difficult to compare/work with -->

:::

::: {.callout-warning icon=false collapse=true}

## Provide code to process results into figures

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚ùå | ‚ùå | ‚ùå |

@huang_optimizing_2019: Had to write code from scratch. For one of the figures, it would have been handy if informed that plot was produced by a simmer function (as didn‚Äôt initially realise this). It also took a bit of time for me to work out how to transform the figure axes as this was not mentioned in the paper (and no code was provided for these). It was also unclear and a bit tricky to work out how to standardise the density in the figures (since it is only described in the text and no formula/calculations are provided there or in the code). <!-- TODO: Consider whether this should be split into another box (i.e. about providing the processing?) -->

:::

::: {.callout-warning icon=false collapse=true}

## Provide code to calculate in-text results

By "in-text results", I am referred to results that are mentioned in the text but not included in/cannot be deduced from any of the tables or figures.

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | N/A |

:::

## Documentation

::: {.callout-warning icon=false collapse=true}

## Include instructions on how to run the model/script

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| <!--TODO--> | <!--TODO--> | <!--TODO--> | <!--TODO--> | ‚úÖ |

@anagnostou_facs-charm_2022: Clear README with instructions on how to run the model was really helpful.

:::

## Other

Include tick marks/grid lines on figures, so it is easier to read across and judge whether a result is above or below a certain Y value.

For @lim_staff_2020, the simplicity of the model structure and code, and simplicity and similarity between figures, really helped to facilitate the reproduction. For @kim_modelling_2021, reproduction was facilitated by having relatively simple and repetitive plots which were easy to understand and create. For @anagnostou_facs-charm_2022, the figures were simple (just means and CI which are already calculated).

Fix errors in script. For @kim_modelling_2021, an error appears to have been introduced with the aoorta diameter thresholds by switching between nested and unnested lists, which I‚Äôm anticipating was unresolved due to the long run times of the model meaning they weren‚Äôt all run in sequence at the end. <!--TODO: Have put in run time, or does it need seperate place -->

@anagnostou_facs-charm_2022: Although not needed for the reproduction itself, when I tried to amend the name and location of the csv file output the model for use in tests, this was very tricky to do as it was hard coded into the scripts and I found difficult to amend due to how the model is run and set up. <!-- TODO: Fall under hard coding? Or output file flexibility? -->

@anagnostou_facs-charm_2022: Included data dictionary for input parameters. Although I didn‚Äôt need this, this would have been great if I needed to change the input parameters at all.

<!-- TODO: Check if any of these should be above. e.g. might want to put simplicity in a same way as i put run time - as simplicity is not inherently required (its about focus of project partly) BUT it is really handy (and it is always a good principle to hold) -->

## References