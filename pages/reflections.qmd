---
title: "Reflections from reproductions"
bibliography: ../references.bib
---

This page describes the facilitators for each reproduction (and, conversely, the barriers to the reproduction, in their absence). With each section, I have created a table which evaluates whether the facilitators were fully met (‚úÖ), partially met (üü°), not met (‚ùå) or not applicable (N/A) for each study.

Links to each study:

* @shoaib_simulation_2021 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-shoaib-2022/evaluation/reflections.html" target="_blank">link to reflections</a>
* @huang_optimizing_2019  - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-huang-2019/evaluation/reflections.html" target="_blank">link to reflections</a>
* @lim_staff_2020 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-lim-2020/evaluation/reflections.html" target="_blank">link to reflections</a>
* @kim_modelling_2021 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-kim-2021/evaluation/reflections.html" target="_blank">link to reflections</a>
* @anagnostou_facs-charm_2022 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-anagnostou-2022/evaluation/reflections.html" target="_blank">link to reflections</a>
* @johnson_cost_2021 - <a href="https://pythonhealthdatascience.github.io/stars-reproduce-johnson-2021/evaluation/reflections.html" target="_blank">link to reflections</a>

## Environment

::: {.callout-note icon=false collapse=true}

## List required packages

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚úÖ |

@shoaib_simulation_2021: Became a time-consuming issue as it took a while to identify a dependency that was needed for the code to work (`greenlet`), and a while longer to realise I had installed another package when the package I needed was in base (`statistics`).

:::

::: {.callout-note icon=false collapse=true}

## Provide versions

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | üü° |

In @shoaib_simulation_2021 I had to backdate the package versions as the didn't work with the latest.

@huang_optimizing_2019 was an R model. As no versions were provided, I initially tried to create an environment with R and package versions that were prior to the article publication date. However, I had great difficulties implementing this with R, and never managed to successfully do this. This was related to:

* The difficulty of switching between R versions
* Problems in finding available/a source for specific package versions for specific versions or R

@lim_staff_2020: Provides major Python version, but chose minor and package versions based on article publication date.

:::

## Structure of code and scripts

::: {.callout-warning icon=false collapse=true}

## Model is provided in a "runnable" format

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚úÖ | ‚ùå |

@huang_optimizing_2019: The code provided was to run the model as part of a web application, but the paper was not focused on this application, but instead on specific model scenarios, so I had to extract the model code and transform it into a format that was "runnable" as an R script/notebook.

:::

::: {.callout-warning icon=false collapse=true}

## Model is designed to be run programmatically

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚úÖ | üü° |

@shoaib_simulation_2021: Model was designed so that you directly change parameters in the script itself. This meant you couldn't run multiple versions of the model using the same script. It also meant hidden errors were more likely (e.g. if miss changing a parameter somewhere, or input the wrong parameters and don‚Äôt realise).

@huang_optimizing_2019: Model was set up as a function, with many of the required parameters already set as inputs to that function.

@lim_staff_2020: Structure of provided code (model largely in functions) made it easier when making changes to run it programmatically. However, it wasn't all in functions, and the model itself was designed to run a single scenario, so I did need to change to a function that can call to easily vary parameters and run scenarios programmatically. <!-- TODO: Consider whether I have evaluated this correctly -->

:::

::: {.callout-warning icon=false collapse=true}

## Don't hard code parameters that you will want to change for scenario analyses

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚ùå |

@shoaib_simulation_2021: Parameters were often hard-coded, and so it took time to spot where these were and correctly adjust them to be modifiable inputs.

<!-- TODO: Double-check this is marked correctly for Huang... I think it is, as some were not hard coded but some were... potentialy could say partially... -->

@lim_staff_2020: Several parameters were hard coded

:::

::: {.callout-warning icon=false collapse=true}

## Avoid large amounts of code duplication

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå |

@shoaib_simulation_2021: The model often contained very similar code before or after warm-up. This has the potential to introduce mistakes - with a suspected (although unconfirmed) mistake being that the lower boundary for the doctor consultation times in configuration 1 differed before and after warm-up.

:::

::: {.callout-warning icon=false collapse=true}

## Include sufficient comments in the code

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| <!--TODO--> | ‚ùå | ‚úÖ |

@huang_optimizing_2019: Would have benefitted from more comments, as it took some time to decipher and ensure I have correctly understood code as it uses lots of abbreviations.

@lim_staff_2020: Lots of comments in the code (including doc-string-style comments at the start of functions) that aided understanding of how it worked.

:::

## Run time and memory usage

::: {.callout-important icon=false collapse=true}

## Quicker models are easier to work with

I have not evaluated like as a criteria, as a long run time is not inherently a bad thing. However, I definitely found that the run time of models had a big impact on how easy it was to reproduce results as longer run times meant it was tricky (or even impossible) to run in the first place, or tricky to re-run.

The studies where I made adjustments were:

* @shoaib_simulation_2021: Add parallel processing and ran fewer replications
* <!-- TODO: Check run time of Huang -->
* @lim_staff_2020: Add parallel processing

:::

::: {.callout-important icon=false collapse=true}

## For slow models, it's very important to state the expected run time

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| <!----> | <!----> | ‚ùå |

For long models with no statement, it can take a while to realise that it's not an error in the code or anything, but actually just a long run time! And hard to know how long to expect, and whether it is without the capacities of your machine and so on.

:::

::: {.callout-important icon=false collapse=true}

## For computationally expensive models, state memory usage, and potentially include alternatives for running it on machines without the capacity for it

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| <!----> | <!----> | <!----> |

:::

## Parameters, scenarios and outputs

::: {.callout-tip icon=false collapse=true}

## Provide code for all scenarios

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚ùå |

@shoaib_simulation_2021: There were several instances where it took quite a while to understand how and where to modify the code in order to run scenarios (e.g. no arrivals, transferring admin work, reducing doctor intervention in deliveries).

@huang_optimizing_2019: Set up a notebook to programmatically run the model scenarios. It took alot of work to modify and write code that could run the scenarios, and I often made mistakes in my interpretation for the implementation of scenarios, which could be avoided if code for those scenarios was provided.

@lim_staff_2020: Several parameters or scenarios were not incorporated in the code, and had to be added (e.g. with conditional logic to skip or change code run, removing hard-coding, adding parameters to existing).

:::

::: {.callout-tip icon=false collapse=true}

## All the required outputs are calculated/provided

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | <!--TODO--> | ‚ùå |

@shoaib_simulation_2021: Had to add some outputs and calculations (e.g. proportion of childbirth cases referred, standard deviation)

@lim_staff_2020: The model script provided was only set up to provide results from days 7, 14 and 21. The figures require daily results, so I needed to modify the code to output that. 

:::

::: {.callout-tip icon=false collapse=true}

## Include correct parameters in the script (even if just for one scenario)

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| <!--TODO--> | ‚ùå |

@huang_optimizing_2019: The baseline model in the script did not match the baseline model in the paper, so had to modify parameters.

:::

::: {.callout-tip icon=false collapse=true}

## Provide all the required parameters

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚ùå |

@shoaib_simulation_2021: Some parameters that could not be calculated were not provided - ie. what consultation boundaries to use when mean length of doctor consultation was 2.5 minutes

@huang_optimizing_2019: In this case, patient arrivals and resource numbers were listed in the paper, and there were several discprepancies between this and the provided code. However, for many of the model parameters like length of appointment, these were not mentioned in the paper, and so it was not possible to confirm whether or not those were correct.

@lim_staff_2020: For Figure 5, had to guess the value for `staff_per_shift`.

:::

::: {.callout-tip icon=false collapse=true}

## If not provided in the script, then *clearly* present all parameters in the paper

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | | ‚úÖ |


@shoaib_simulation_2021: Although there was a scenario table, this did not include all the parameters I would need to change. It was more challenging to identify parameters that were only described in the body of the article. There were also some discrepancies in parameters between the main text of the article, and the tables and figures. Some scenarios were quite ambiguous/unclear from their description in the text, and I initially misunderstood the required parameters for the scenarios.

:::

::: {.callout-tip icon=false collapse=true}

## If will need to process parameters, provide required calculations

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚úÖ |

@shoaib_simulation_2021: It was unclear how to estimate inter-arrival time

@huang_optimizing_2019: The calculations for inter-arrival times were provided in the code, and the inputs to the code were the number of arrivals, as reported in the paper, and so making it easy to compare those parameters and check if numbers were correct or not.

:::

## Output format

::: {.callout-caution icon=false collapse=true}

## Saves output to a file

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚úÖ | <!----> | ‚ùå |

:::

::: {.callout-caution icon=false collapse=true}

## Understandable output tables

E.g. Easy to figure out how to use output table/s to create tables/figures.

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå |

For @shoaib_simulation_2021, there were two alternative results spreadsheets with some duplicate metrics but sometimes differing results between them, which made it a bit confusing to work out what to use.

:::

## Seeds

::: {.callout-note icon=false collapse=true}

## Use seeds to control stochasticity

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚ùå |

@shoaib_simulation_2021: The lack of seeds wasn't actually a barrier to the reproduction though due to the replication number. I later add seeds so my results could be reproduced, and found that the ease of setting seeds with salabim was a greater facilitator to the work. I only had to change one or two lines of code to then get consistent results between runs (unlike other simulation software like SimPy where you have to consider the use of seeds by different sampling functions). Moreover, by default, salabim would have set a seed (although overridden by original authors to enable them to run replications).

@huang_optimizing_2019: It would have been beneficial to include seeds, as there was a fair amount of variability, so with seeds I could then I could be sure that my results do not differ from the original simply due to randomness.

@lim_staff_2020: The results obtained looked very similar to the original article, with minimal differences that I felt to be within the expected variation from the model stochasticity. However, if seeds had been present, we would have been able to say with certainty. I did not feel I needed to add seeds during the reproduction to get the same results.

:::

## Code to produce article results

::: {.callout-warning icon=false collapse=true}

## Provide code to process results into tables

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | N/A | <!--TODO--> |

<!--TODO: Lim 2020... I think from memory that this output tables  similar to the paper, but I then changed them as that format was difficult to compare/work with -->

:::

::: {.callout-warning icon=false collapse=true}

## Provide code to process results into figures

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | ‚ùå |

@huang_optimizing_2019: Had to write code from scratch. For one of the figures, it would have been handy if informed that plot was produced by a simmer function (as didn‚Äôt initially realise this). It also took a bit of time for me to work out how to transform the figure axes as this was not mentioned in the paper (and no code was provided for these). It was also unclear and a bit tricky to work out how to standardise the density in the figures (since it is only described in the text and no formula/calculations are provided there or in the code). <!-- TODO: Consider whether this should be split into another box (i.e. about providing the processing?) -->

:::

::: {.callout-warning icon=false collapse=true}

## Provide code to calculate in-text results

By "in-text results", I am referred to results that are mentioned in the text but not included in/cannot be deduced from any of the tables or figures.

| @shoaib_simulation_2021 | @huang_optimizing_2019 | @lim_staff_2020 | @kim_modelling_2021 | @anagnostou_facs-charm_2022 | @johnson_cost_2021 |
| :-: | :-: | :-: | :-: | :-: | :-: |
| ‚ùå | ‚ùå | N/A |

:::

## Other

Include tick marks/grid lines on figures, so it is easier to read across and judge whether a result is above or below a certain Y value.

For @lim_staff_2020, the simplicity of the model structure and code, and simplicity and similarity between figures, really helped to facilitate the reproduction.

<!-- TODO: Check if any of these should be above. e.g. might want to put simplicity in a same way as i put run time - as simplicity is not inherently required (its about focus of project partly) BUT it is really handy (and it is always a good principle to hold) -->

## References